# .github/workflows/api-tests.yml
name: API Test Automation CI

#trigger conditions
# This workflow will run on pushes and pull requests to the main and develop branches.
# It will not run on other branches or tags.
on:
  push:
    branches:
      - main
      - develop
  pull_request:
    branches:
      - main
      - develop

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  run-api-tests:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
          
      - name: Install dependencies
        run: npm ci
        
      - name: Set Environment Variables for API Key
        # This uses a GitHub Secret named REQRES_API_KEY
        # Configure this secret in your GitHub repository settings -> Secrets and variables -> Actions
        run: |
          echo "API_KEY=${{ secrets.REQRES_API_KEY }}" >> $GITHUB_ENV
          
      - name: Run API Tests and Generate Allure Results
        # This assumes your package.json has a script like "test:api:users": "npx playwright test tests/userApi.spec.ts tests/registerApi.spec.ts"
        # And that playwright.config.ts has Allure reporter configured
        run: npm run test:api:users
        continue-on-error: true # Continue even if tests fail to ensure report generation
        
      - name: Generate Allure HTML Report
        # Install Allure Commandline globally on the runner for report generation
        run: |
          npm install -g allure-commandline@latest
          allure generate allure-results --clean -o allure-report
        if: always()
        
      - name: Upload Allure Report as Artifact
        uses: actions/upload-artifact@v4
        if: always() # Uploads even if previous steps fail
        with:
          name: allure-api-test-report
          path: allure-report/
          retention-days: 30
          
      - name: Upload Playwright Test Report (Raw HTML)
        # Playwright's built-in HTML report
        uses: actions/upload-artifact@v4
        if: always() # Uploads even if previous steps fail
        with:
          name: playwright-api-test-report
          path: playwright-report/
          retention-days: 30

  # Deploy Allure report to GitHub Pages (only on main branch)
  deploy-allure-report:
    if: github.ref == 'refs/heads/main' && always()
    needs: run-api-tests
    runs-on: ubuntu-latest
    steps:
      - name: Setup Pages
        uses: actions/configure-pages@v5
        
      - name: Download Allure Report
        uses: actions/download-artifact@v4
        with:
          name: allure-api-test-report
          path: ./allure-report
          
      - name: Upload to GitHub Pages
        uses: actions/upload-pages-artifact@v3
        with:
          path: ./allure-report
          
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4